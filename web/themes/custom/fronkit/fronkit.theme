<?php

use Drupal\Component\Render\FormattableMarkup;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_field().
 */
function fronkit_preprocess_field(&$variables, $hook)
{

  if ($variables['field_name'] == 'field_process_items' || $variables['field_name'] == 'field_features') {
    foreach ($variables['items'] as $idx => $item) {
      $variables['items'][$idx]['content']['#paragraph']->index = $idx + 1;
    }
  }

  if ($variables['field_name'] == 'field_link') {
    foreach ($variables['items'] as $key => $item) {
      $title = $variables['items'][$key]['content']['#title'];
      $variables['items'][$key]['content']['#title'] = new FormattableMarkup($title, []);
    }
  }

  if ($variables['field_name'] == 'field_facebook_link') {
    foreach ($variables['items'] as $key => $item) {
      $title = '<i class="ri-facebook-fill"></i>';
      $variables['items'][$key]['content']['#title'] = new FormattableMarkup($title, []);
    }
  }

  if ($variables['field_name'] == 'field_linkedin_link') {
    foreach ($variables['items'] as $key => $item) {
      $title = '<i class="ri-linkedin-fill"></i>';
      $variables['items'][$key]['content']['#title'] = new FormattableMarkup($title, []);
    }
  }

  if ($variables['field_name'] == 'field_twitter_link') {
    foreach ($variables['items'] as $key => $item) {
      $title = '<i class="ri-twitter-fill"></i>';
      $variables['items'][$key]['content']['#title'] = new FormattableMarkup($title, []);
    }
  }

  if ($variables['field_name'] == 'field_youtube_link') {
    foreach ($variables['items'] as $key => $item) {
      $title = '<i class="ri-youtube-fill"></i>';
      $variables['items'][$key]['content']['#title'] = new FormattableMarkup($title, []);
    }
  }

}

/**
 * Implements hook_preprocess_block().
 */
function fronkit_preprocess_block(&$variables)
{
  // Add a class to block title
  $variables['title_attributes']['class'][] = 'block-title';
  // Add a class indicating the custom block bundle.
  if (isset($variables['elements']['content']['#block_content'])) {
    $bundle = $variables['elements']['content']['#block_content']->bundle();
    $variables['attributes']['class'][] = Html::getClass('block-type-' . $bundle);

    $view_mode = strtr($variables['elements']['#configuration']['view_mode'], '.', '_');
    $variables['attributes']['class'][] = Html::getClass('view-mode-' . $view_mode);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for block templates.
 */
function fronkit_theme_suggestions_block_alter(array &$suggestions, array $variables, $hook)
{
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    $bundle = $variables['elements']['content']['#block_content']->bundle();
    $view_mode = strtr($variables['elements']['#configuration']['view_mode'], '.', '_');

    array_splice($suggestions, 1, 0, 'block__bundle__' . $bundle);
    array_splice($suggestions, 1, 0, 'block__bundle__' . $bundle . '__' . $view_mode);
  }
}

/**
 * @param $variables
 */
function fronkit_preprocess_views_view(&$variables)
{
  $view = $variables['view'];
  switch ($view->storage->id()) {
    case 'portfolio':
      if ($view->current_display == 'block_1') {
        $variables['more']['#options']['attributes']['class'] = 'btn btn-primary';
      }
  }
}

/**
 * @param $vars
 */
function fronkit_preprocess_node__view__team(&$vars)
{
  $view = $vars['view'];
  $node = $vars['node'];
  foreach ($view->result as $key => $row) {
    if ($row->nid == $node->id()) {
      $vars['row_index'] = $row->index;
    }
  }
}
